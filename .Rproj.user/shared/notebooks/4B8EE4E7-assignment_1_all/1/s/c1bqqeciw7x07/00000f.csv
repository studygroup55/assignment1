"0","#Define rate"
"0","rate <- 0.5"
"0",""
"0","#Define noise (the probability of using strategy win-shift-lose-stay)"
"0","noise <- 0.67"
"0",""
"0","# Define the number of trials and the number of repetitions"
"0","trials <- 120"
"0","repetitions <- 100"
"0",""
"0","#Define empty vectors"
"0","Self <- rep(NA, trials)"
"0","Other <- rep(NA, trials)"
"0",""
"0","# Create empty matrices to store the results"
"0","Self_results <- matrix(0, nrow = trials, ncol = repetitions)"
"0","Other_results <- matrix(0, nrow = trials, ncol = repetitions)"
"0",""
"0","#Define random first choice for both "
"0","Self[1] <- RandomAgent_f(0.5) #player"
"0","Other[1] <- RandomAgent_f(0.5) #dealer"
"0",""
"0",""
"0","#Run simulation"
"0","# Outer loop for repetitions"
"0","for (j in 1:repetitions) {"
"0","  #Define random first choice"
"0","  Self[1] <- RandomAgent_f(0.5) #player"
"0","  Other[1] <- RandomAgent_f(0.5) #dealer"
"0","  for (i in 2:trials){"
"0","  if(Self[i-1] == Other[i-1]){"
"0","    Feedback = 1"
"0","  } else {Feedback = 0}"
"0","  Self[i] <- ProbWSLSAgent_f(Self[i-1], Feedback, noise)"
"0","  Other[i] <- WSLSAgent_f(Other[i-1], Feedback)"
"0","}"
"0","  # Store the results in the matrices"
"0","  Self_results[, j] <- Self"
"0","  Other_results[, j] <- Other"
"0","}"
"0",""
"0","#Transform matrices to long (stacked) format"
"0","Self_long <- melt(Self_results)"
"0","Other_long <- melt(Other_results)"
"0",""
"0","#Merge matrices"
"0","merged <- cbind(Self_long, Other_long[,3])"
"0",""
"0","#Rename dataframe variables"
"0","names(merged) <- c(""Trial"", ""Participant"", ""Self_choice"", ""Other_choice"")"
"0",""
"0","#Add feedback"
"0","merged$Feedback <- as.numeric(merged$Self_choice == merged$Other_choice)"
"0",""
"0","#Add cumulative performance"
"0","merged <- merged %>% "
"0","  group_by(Participant) %>% "
"0","  mutate(cumulativerateSelf = cumsum(Feedback) / seq_along(Feedback),"
"0","         cumulativerateOther = cumsum(1-Feedback) / seq_along(Feedback) )"
"0",""
"0","#Plotting with dealer/player colors"
"0","ggplot(merged) + theme_classic() + geom_line(color=""red"", aes(x = Trial, y = cumulativerateSelf, group = Participant, color = as.factor(Participant))) + geom_line(color=""blue"", aes(x = Trial, y = cumulativerateOther, group = Participant, color = as.factor(Participant))) + labs(x = ""Trial"", y = ""Cumulative outcome"", color = ""Participant"") + ggtitle(""WSLS agent (blue) vs strategy-shifting (red)"")"
